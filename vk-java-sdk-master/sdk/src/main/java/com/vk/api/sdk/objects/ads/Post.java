// Autogenerated from vk-api-schema. Please don't edit it manually.
package com.vk.api.sdk.objects.ads;

import com.google.gson.Gson;
import com.google.gson.annotations.SerializedName;
import com.vk.api.sdk.objects.Validable;
import com.vk.api.sdk.objects.wall.WallpostAttachment;
import java.util.List;
import java.util.Objects;

/**
 * Post object
 */
public class Post implements Validable {
    @SerializedName("ads_easy_promote")
    private PostEasyPromote adsEasyPromote;

    @SerializedName("attachments")
    private List<WallpostAttachment> attachments;

    /**
     * Can delete
     */
    @SerializedName("can_delete")
    private Integer canDelete;

    /**
     * Can edit
     */
    @SerializedName("can_edit")
    private Integer canEdit;

    /**
     * Can pin
     */
    @SerializedName("can_pin")
    private Integer canPin;

    /**
     * Carousel offset
     */
    @SerializedName("carousel_offset")
    private Integer carouselOffset;

    @SerializedName("comments")
    private PostComments comments;

    /**
     * Created by
     */
    @SerializedName("created_by")
    private Integer createdBy;

    /**
     * Date
     */
    @SerializedName("date")
    private Integer date;

    @SerializedName("donut")
    private PostDonut donut;

    /**
     * Edited date
     */
    @SerializedName("edited")
    private Integer edited;

    /**
     * From id
     */
    @SerializedName("from_id")
    private Integer fromId;

    /**
     * Hash
     */
    @SerializedName("hash")
    private String hash;

    /**
     * Post id
     */
    @SerializedName("id")
    private Integer id;

    /**
     * Is favorite
     */
    @SerializedName("is_favorite")
    private Boolean isFavorite;

    /**
     * Is pinned
     */
    @SerializedName("is_pinned")
    private Integer isPinned;

    /**
     * Is promoted post stealth
     */
    @SerializedName("is_promoted_post_stealth")
    private Boolean isPromotedPostStealth;

    @SerializedName("likes")
    private PostLikes likes;

    /**
     * Marked as ads
     */
    @SerializedName("marked_as_ads")
    private Integer markedAsAds;

    @SerializedName("owner")
    private PostOwner owner;

    /**
     * Owner id
     * Entity: owner
     */
    @SerializedName("owner_id")
    private Long ownerId;

    /**
     * Post type
     */
    @SerializedName("post_type")
    private String postType;

    @SerializedName("reposts")
    private PostReposts reposts;

    /**
     * Short text rate
     */
    @SerializedName("short_text_rate")
    private Number shortTextRate;

    /**
     * Text
     */
    @SerializedName("text")
    private String text;

    /**
     * Type
     */
    @SerializedName("type")
    private String type;

    @SerializedName("views")
    private PostViews views;

    public PostEasyPromote getAdsEasyPromote() {
        return adsEasyPromote;
    }

    public Post setAdsEasyPromote(PostEasyPromote adsEasyPromote) {
        this.adsEasyPromote = adsEasyPromote;
        return this;
    }

    public List<WallpostAttachment> getAttachments() {
        return attachments;
    }

    public Post setAttachments(List<WallpostAttachment> attachments) {
        this.attachments = attachments;
        return this;
    }

    public Integer getCanDelete() {
        return canDelete;
    }

    public Post setCanDelete(Integer canDelete) {
        this.canDelete = canDelete;
        return this;
    }

    public Integer getCanEdit() {
        return canEdit;
    }

    public Post setCanEdit(Integer canEdit) {
        this.canEdit = canEdit;
        return this;
    }

    public Integer getCanPin() {
        return canPin;
    }

    public Post setCanPin(Integer canPin) {
        this.canPin = canPin;
        return this;
    }

    public Integer getCarouselOffset() {
        return carouselOffset;
    }

    public Post setCarouselOffset(Integer carouselOffset) {
        this.carouselOffset = carouselOffset;
        return this;
    }

    public PostComments getComments() {
        return comments;
    }

    public Post setComments(PostComments comments) {
        this.comments = comments;
        return this;
    }

    public Integer getCreatedBy() {
        return createdBy;
    }

    public Post setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public Integer getDate() {
        return date;
    }

    public Post setDate(Integer date) {
        this.date = date;
        return this;
    }

    public PostDonut getDonut() {
        return donut;
    }

    public Post setDonut(PostDonut donut) {
        this.donut = donut;
        return this;
    }

    public Integer getEdited() {
        return edited;
    }

    public Post setEdited(Integer edited) {
        this.edited = edited;
        return this;
    }

    public Integer getFromId() {
        return fromId;
    }

    public Post setFromId(Integer fromId) {
        this.fromId = fromId;
        return this;
    }

    public String getHash() {
        return hash;
    }

    public Post setHash(String hash) {
        this.hash = hash;
        return this;
    }

    public Integer getId() {
        return id;
    }

    public Post setId(Integer id) {
        this.id = id;
        return this;
    }

    public Boolean getIsFavorite() {
        return isFavorite;
    }

    public Post setIsFavorite(Boolean isFavorite) {
        this.isFavorite = isFavorite;
        return this;
    }

    public Integer getIsPinned() {
        return isPinned;
    }

    public Post setIsPinned(Integer isPinned) {
        this.isPinned = isPinned;
        return this;
    }

    public Boolean getIsPromotedPostStealth() {
        return isPromotedPostStealth;
    }

    public Post setIsPromotedPostStealth(Boolean isPromotedPostStealth) {
        this.isPromotedPostStealth = isPromotedPostStealth;
        return this;
    }

    public PostLikes getLikes() {
        return likes;
    }

    public Post setLikes(PostLikes likes) {
        this.likes = likes;
        return this;
    }

    public Integer getMarkedAsAds() {
        return markedAsAds;
    }

    public Post setMarkedAsAds(Integer markedAsAds) {
        this.markedAsAds = markedAsAds;
        return this;
    }

    public PostOwner getOwner() {
        return owner;
    }

    public Post setOwner(PostOwner owner) {
        this.owner = owner;
        return this;
    }

    public Long getOwnerId() {
        return ownerId;
    }

    public Post setOwnerId(Long ownerId) {
        this.ownerId = ownerId;
        return this;
    }

    public String getPostType() {
        return postType;
    }

    public Post setPostType(String postType) {
        this.postType = postType;
        return this;
    }

    public PostReposts getReposts() {
        return reposts;
    }

    public Post setReposts(PostReposts reposts) {
        this.reposts = reposts;
        return this;
    }

    public Number getShortTextRate() {
        return shortTextRate;
    }

    public Post setShortTextRate(Number shortTextRate) {
        this.shortTextRate = shortTextRate;
        return this;
    }

    public String getText() {
        return text;
    }

    public Post setText(String text) {
        this.text = text;
        return this;
    }

    public String getType() {
        return type;
    }

    public Post setType(String type) {
        this.type = type;
        return this;
    }

    public PostViews getViews() {
        return views;
    }

    public Post setViews(PostViews views) {
        this.views = views;
        return this;
    }

    @Override
    public int hashCode() {
        return Objects.hash(date, carouselOffset, attachments, canEdit, ownerId, type, donut, canDelete, id, text, markedAsAds, canPin, views, likes, owner, comments, isPinned, postType, edited, shortTextRate, fromId, createdBy, adsEasyPromote, isPromotedPostStealth, hash, reposts, isFavorite);
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Post post = (Post) o;
        return Objects.equals(date, post.date) &&
                Objects.equals(adsEasyPromote, post.adsEasyPromote) &&
                Objects.equals(attachments, post.attachments) &&
                Objects.equals(fromId, post.fromId) &&
                Objects.equals(isFavorite, post.isFavorite) &&
                Objects.equals(ownerId, post.ownerId) &&
                Objects.equals(type, post.type) &&
                Objects.equals(isPinned, post.isPinned) &&
                Objects.equals(canDelete, post.canDelete) &&
                Objects.equals(donut, post.donut) &&
                Objects.equals(markedAsAds, post.markedAsAds) &&
                Objects.equals(postType, post.postType) &&
                Objects.equals(id, post.id) &&
                Objects.equals(text, post.text) &&
                Objects.equals(views, post.views) &&
                Objects.equals(likes, post.likes) &&
                Objects.equals(owner, post.owner) &&
                Objects.equals(comments, post.comments) &&
                Objects.equals(edited, post.edited) &&
                Objects.equals(canEdit, post.canEdit) &&
                Objects.equals(isPromotedPostStealth, post.isPromotedPostStealth) &&
                Objects.equals(createdBy, post.createdBy) &&
                Objects.equals(canPin, post.canPin) &&
                Objects.equals(shortTextRate, post.shortTextRate) &&
                Objects.equals(carouselOffset, post.carouselOffset) &&
                Objects.equals(hash, post.hash) &&
                Objects.equals(reposts, post.reposts);
    }

    @Override
    public String toString() {
        final Gson gson = new Gson();
        return gson.toJson(this);
    }

    public String toPrettyString() {
        final StringBuilder sb = new StringBuilder("Post{");
        sb.append("date=").append(date);
        sb.append(", adsEasyPromote=").append(adsEasyPromote);
        sb.append(", attachments=").append(attachments);
        sb.append(", fromId=").append(fromId);
        sb.append(", isFavorite=").append(isFavorite);
        sb.append(", ownerId=").append(ownerId);
        sb.append(", type='").append(type).append("'");
        sb.append(", isPinned=").append(isPinned);
        sb.append(", canDelete=").append(canDelete);
        sb.append(", donut=").append(donut);
        sb.append(", markedAsAds=").append(markedAsAds);
        sb.append(", postType='").append(postType).append("'");
        sb.append(", id=").append(id);
        sb.append(", text='").append(text).append("'");
        sb.append(", views=").append(views);
        sb.append(", likes=").append(likes);
        sb.append(", owner=").append(owner);
        sb.append(", comments=").append(comments);
        sb.append(", edited=").append(edited);
        sb.append(", canEdit=").append(canEdit);
        sb.append(", isPromotedPostStealth=").append(isPromotedPostStealth);
        sb.append(", createdBy=").append(createdBy);
        sb.append(", canPin=").append(canPin);
        sb.append(", shortTextRate=").append(shortTextRate);
        sb.append(", carouselOffset=").append(carouselOffset);
        sb.append(", hash='").append(hash).append("'");
        sb.append(", reposts=").append(reposts);
        sb.append('}');
        return sb.toString();
    }
}
