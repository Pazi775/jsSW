// Autogenerated from vk-api-schema. Please don't edit it manually.
package com.vk.api.sdk.objects.ads;

import com.google.gson.Gson;
import com.google.gson.annotations.SerializedName;
import com.vk.api.sdk.objects.Validable;
import java.util.Objects;

/**
 * StoryItem object
 */
public class StoryItem implements Validable {
    /**
     * Can like
     */
    @SerializedName("canLike")
    private Boolean canlike;

    /**
     * Can ask
     */
    @SerializedName("can_ask")
    private Boolean canAsk;

    /**
     * Can ask anonymous
     */
    @SerializedName("can_ask_anonymous")
    private Boolean canAskAnonymous;

    /**
     * Can comment
     */
    @SerializedName("can_comment")
    private Boolean canComment;

    /**
     * Can manage
     */
    @SerializedName("can_manage")
    private Boolean canManage;

    /**
     * Can remove
     */
    @SerializedName("can_remove")
    private Boolean canRemove;

    /**
     * Can share
     */
    @SerializedName("can_share")
    private Boolean canShare;

    /**
     * Date
     */
    @SerializedName("date")
    private String date;

    /**
     * First frame
     */
    @SerializedName("first_frame")
    private String firstFrame;

    /**
     * Story id
     */
    @SerializedName("id")
    private Integer id;

    /**
     * Is ads
     */
    @SerializedName("isAds")
    private Boolean isads;

    /**
     * Is liked
     */
    @SerializedName("isLiked")
    private Boolean isliked;

    /**
     * Is part of narrative
     */
    @SerializedName("isPartOfNarrative")
    private Boolean ispartofnarrative;

    /**
     * Is profile question
     */
    @SerializedName("isProfileQuestion")
    private Boolean isprofilequestion;

    @SerializedName("link")
    private StoryItemLink link;

    /**
     * Owner id
     * Entity: owner
     */
    @SerializedName("owner_id")
    private Long ownerId;

    /**
     * Photo url
     */
    @SerializedName("photo_url")
    private String photoUrl;

    /**
     * Preview url
     */
    @SerializedName("preview_url")
    private String previewUrl;

    /**
     * Story raw id
     */
    @SerializedName("raw_id")
    private String rawId;

    /**
     * Small preview
     */
    @SerializedName("small_preview")
    private String smallPreview;

    @SerializedName("stats")
    private StoryItemStats stats;

    /**
     * Time
     */
    @SerializedName("time")
    private Integer time;

    /**
     * Track code
     */
    @SerializedName("track_code")
    private String trackCode;

    /**
     * Type
     */
    @SerializedName("type")
    private String type;

    /**
     * Is unread
     */
    @SerializedName("unread")
    private Boolean unread;

    /**
     * Video url
     */
    @SerializedName("video_url")
    private String videoUrl;

    public Boolean getCanlike() {
        return canlike;
    }

    public StoryItem setCanlike(Boolean canlike) {
        this.canlike = canlike;
        return this;
    }

    public Boolean getCanAsk() {
        return canAsk;
    }

    public StoryItem setCanAsk(Boolean canAsk) {
        this.canAsk = canAsk;
        return this;
    }

    public Boolean getCanAskAnonymous() {
        return canAskAnonymous;
    }

    public StoryItem setCanAskAnonymous(Boolean canAskAnonymous) {
        this.canAskAnonymous = canAskAnonymous;
        return this;
    }

    public Boolean getCanComment() {
        return canComment;
    }

    public StoryItem setCanComment(Boolean canComment) {
        this.canComment = canComment;
        return this;
    }

    public Boolean getCanManage() {
        return canManage;
    }

    public StoryItem setCanManage(Boolean canManage) {
        this.canManage = canManage;
        return this;
    }

    public Boolean getCanRemove() {
        return canRemove;
    }

    public StoryItem setCanRemove(Boolean canRemove) {
        this.canRemove = canRemove;
        return this;
    }

    public Boolean getCanShare() {
        return canShare;
    }

    public StoryItem setCanShare(Boolean canShare) {
        this.canShare = canShare;
        return this;
    }

    public String getDate() {
        return date;
    }

    public StoryItem setDate(String date) {
        this.date = date;
        return this;
    }

    public String getFirstFrame() {
        return firstFrame;
    }

    public StoryItem setFirstFrame(String firstFrame) {
        this.firstFrame = firstFrame;
        return this;
    }

    public Integer getId() {
        return id;
    }

    public StoryItem setId(Integer id) {
        this.id = id;
        return this;
    }

    public Boolean getIsads() {
        return isads;
    }

    public StoryItem setIsads(Boolean isads) {
        this.isads = isads;
        return this;
    }

    public Boolean getIsliked() {
        return isliked;
    }

    public StoryItem setIsliked(Boolean isliked) {
        this.isliked = isliked;
        return this;
    }

    public Boolean getIspartofnarrative() {
        return ispartofnarrative;
    }

    public StoryItem setIspartofnarrative(Boolean ispartofnarrative) {
        this.ispartofnarrative = ispartofnarrative;
        return this;
    }

    public Boolean getIsprofilequestion() {
        return isprofilequestion;
    }

    public StoryItem setIsprofilequestion(Boolean isprofilequestion) {
        this.isprofilequestion = isprofilequestion;
        return this;
    }

    public StoryItemLink getLink() {
        return link;
    }

    public StoryItem setLink(StoryItemLink link) {
        this.link = link;
        return this;
    }

    public Long getOwnerId() {
        return ownerId;
    }

    public StoryItem setOwnerId(Long ownerId) {
        this.ownerId = ownerId;
        return this;
    }

    public String getPhotoUrl() {
        return photoUrl;
    }

    public StoryItem setPhotoUrl(String photoUrl) {
        this.photoUrl = photoUrl;
        return this;
    }

    public String getPreviewUrl() {
        return previewUrl;
    }

    public StoryItem setPreviewUrl(String previewUrl) {
        this.previewUrl = previewUrl;
        return this;
    }

    public String getRawId() {
        return rawId;
    }

    public StoryItem setRawId(String rawId) {
        this.rawId = rawId;
        return this;
    }

    public String getSmallPreview() {
        return smallPreview;
    }

    public StoryItem setSmallPreview(String smallPreview) {
        this.smallPreview = smallPreview;
        return this;
    }

    public StoryItemStats getStats() {
        return stats;
    }

    public StoryItem setStats(StoryItemStats stats) {
        this.stats = stats;
        return this;
    }

    public Integer getTime() {
        return time;
    }

    public StoryItem setTime(Integer time) {
        this.time = time;
        return this;
    }

    public String getTrackCode() {
        return trackCode;
    }

    public StoryItem setTrackCode(String trackCode) {
        this.trackCode = trackCode;
        return this;
    }

    public String getType() {
        return type;
    }

    public StoryItem setType(String type) {
        this.type = type;
        return this;
    }

    public Boolean getUnread() {
        return unread;
    }

    public StoryItem setUnread(Boolean unread) {
        this.unread = unread;
        return this;
    }

    public String getVideoUrl() {
        return videoUrl;
    }

    public StoryItem setVideoUrl(String videoUrl) {
        this.videoUrl = videoUrl;
        return this;
    }

    @Override
    public int hashCode() {
        return Objects.hash(date, previewUrl, unread, link, ownerId, type, isliked, photoUrl, canRemove, videoUrl, firstFrame, stats, rawId, canComment, id, trackCode, smallPreview, canAskAnonymous, canShare, canlike, ispartofnarrative, canAsk, canManage, isprofilequestion, isads, time);
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        StoryItem storyItem = (StoryItem) o;
        return Objects.equals(date, storyItem.date) &&
                Objects.equals(canRemove, storyItem.canRemove) &&
                Objects.equals(canAsk, storyItem.canAsk) &&
                Objects.equals(rawId, storyItem.rawId) &&
                Objects.equals(unread, storyItem.unread) &&
                Objects.equals(canlike, storyItem.canlike) &&
                Objects.equals(ownerId, storyItem.ownerId) &&
                Objects.equals(link, storyItem.link) &&
                Objects.equals(smallPreview, storyItem.smallPreview) &&
                Objects.equals(type, storyItem.type) &&
                Objects.equals(canAskAnonymous, storyItem.canAskAnonymous) &&
                Objects.equals(canComment, storyItem.canComment) &&
                Objects.equals(videoUrl, storyItem.videoUrl) &&
                Objects.equals(stats, storyItem.stats) &&
                Objects.equals(isads, storyItem.isads) &&
                Objects.equals(id, storyItem.id) &&
                Objects.equals(photoUrl, storyItem.photoUrl) &&
                Objects.equals(ispartofnarrative, storyItem.ispartofnarrative) &&
                Objects.equals(isprofilequestion, storyItem.isprofilequestion) &&
                Objects.equals(canManage, storyItem.canManage) &&
                Objects.equals(canShare, storyItem.canShare) &&
                Objects.equals(isliked, storyItem.isliked) &&
                Objects.equals(previewUrl, storyItem.previewUrl) &&
                Objects.equals(trackCode, storyItem.trackCode) &&
                Objects.equals(time, storyItem.time) &&
                Objects.equals(firstFrame, storyItem.firstFrame);
    }

    @Override
    public String toString() {
        final Gson gson = new Gson();
        return gson.toJson(this);
    }

    public String toPrettyString() {
        final StringBuilder sb = new StringBuilder("StoryItem{");
        sb.append("date='").append(date).append("'");
        sb.append(", canRemove=").append(canRemove);
        sb.append(", canAsk=").append(canAsk);
        sb.append(", rawId='").append(rawId).append("'");
        sb.append(", unread=").append(unread);
        sb.append(", canlike=").append(canlike);
        sb.append(", ownerId=").append(ownerId);
        sb.append(", link=").append(link);
        sb.append(", smallPreview='").append(smallPreview).append("'");
        sb.append(", type='").append(type).append("'");
        sb.append(", canAskAnonymous=").append(canAskAnonymous);
        sb.append(", canComment=").append(canComment);
        sb.append(", videoUrl='").append(videoUrl).append("'");
        sb.append(", stats=").append(stats);
        sb.append(", isads=").append(isads);
        sb.append(", id=").append(id);
        sb.append(", photoUrl='").append(photoUrl).append("'");
        sb.append(", ispartofnarrative=").append(ispartofnarrative);
        sb.append(", isprofilequestion=").append(isprofilequestion);
        sb.append(", canManage=").append(canManage);
        sb.append(", canShare=").append(canShare);
        sb.append(", isliked=").append(isliked);
        sb.append(", previewUrl='").append(previewUrl).append("'");
        sb.append(", trackCode='").append(trackCode).append("'");
        sb.append(", time=").append(time);
        sb.append(", firstFrame='").append(firstFrame).append("'");
        sb.append('}');
        return sb.toString();
    }
}
