// Autogenerated from vk-api-schema. Please don't edit it manually.
package com.vk.api.sdk.objects.support;

import com.google.gson.Gson;
import com.google.gson.annotations.SerializedName;
import com.vk.api.sdk.objects.Validable;
import com.vk.api.sdk.objects.annotations.Required;
import java.util.Objects;

/**
 * UnblockScreenHeaderFields object
 */
public class UnblockScreenHeaderFields implements Validable {
    /**
     * Нужна ли кнопка выхода
     */
    @SerializedName("exit_btn")
    private Boolean exitBtn;

    /**
     * Нужен ли градиент  на фоне заголовка
     */
    @SerializedName("gradient")
    private Boolean gradient;

    /**
     * Картинка над текстом
     */
    @SerializedName("image")
    private String image;

    /**
     * Текст подзаголовка
     */
    @SerializedName("subheader")
    private String subheader;

    /**
     * Текст заголовка
     */
    @SerializedName("text")
    private String text;

    @SerializedName("type")
    @Required
    private UnblockScreenHeaderFieldsType type;

    public Boolean getExitBtn() {
        return exitBtn;
    }

    public UnblockScreenHeaderFields setExitBtn(Boolean exitBtn) {
        this.exitBtn = exitBtn;
        return this;
    }

    public Boolean getGradient() {
        return gradient;
    }

    public UnblockScreenHeaderFields setGradient(Boolean gradient) {
        this.gradient = gradient;
        return this;
    }

    public String getImage() {
        return image;
    }

    public UnblockScreenHeaderFields setImage(String image) {
        this.image = image;
        return this;
    }

    public String getSubheader() {
        return subheader;
    }

    public UnblockScreenHeaderFields setSubheader(String subheader) {
        this.subheader = subheader;
        return this;
    }

    public String getText() {
        return text;
    }

    public UnblockScreenHeaderFields setText(String text) {
        this.text = text;
        return this;
    }

    public UnblockScreenHeaderFieldsType getType() {
        return type;
    }

    public UnblockScreenHeaderFields setType(UnblockScreenHeaderFieldsType type) {
        this.type = type;
        return this;
    }

    @Override
    public int hashCode() {
        return Objects.hash(image, subheader, exitBtn, gradient, text, type);
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        UnblockScreenHeaderFields unblockScreenHeaderFields = (UnblockScreenHeaderFields) o;
        return Objects.equals(image, unblockScreenHeaderFields.image) &&
                Objects.equals(subheader, unblockScreenHeaderFields.subheader) &&
                Objects.equals(exitBtn, unblockScreenHeaderFields.exitBtn) &&
                Objects.equals(gradient, unblockScreenHeaderFields.gradient) &&
                Objects.equals(text, unblockScreenHeaderFields.text) &&
                Objects.equals(type, unblockScreenHeaderFields.type);
    }

    @Override
    public String toString() {
        final Gson gson = new Gson();
        return gson.toJson(this);
    }

    public String toPrettyString() {
        final StringBuilder sb = new StringBuilder("UnblockScreenHeaderFields{");
        sb.append("image='").append(image).append("'");
        sb.append(", subheader='").append(subheader).append("'");
        sb.append(", exitBtn=").append(exitBtn);
        sb.append(", gradient=").append(gradient);
        sb.append(", text='").append(text).append("'");
        sb.append(", type='").append(type).append("'");
        sb.append('}');
        return sb.toString();
    }
}
