// Autogenerated from vk-api-schema. Please don't edit it manually.
package com.vk.api.sdk.actions;

import com.vk.api.sdk.client.AbstractAction;
import com.vk.api.sdk.client.VkApiClient;
import com.vk.api.sdk.client.actors.ServiceActor;
import com.vk.api.sdk.client.actors.UserActor;
import com.vk.api.sdk.objects.annotations.ApiMethod;
import com.vk.api.sdk.queries.translations.TranslationsTranslateQuery;
import java.util.List;

/**
 * List of Translations methods
 */
public class Translations extends AbstractAction {
    /**
     * Constructor
     *
     * @param client vk api client
     */
    public Translations(VkApiClient client) {
        super(client);
    }

    /**
     * @param actor vk user actor
     * @param translationLanguage
     * @param texts
     * @return query
     */
    @ApiMethod("translations.translate")
    public TranslationsTranslateQuery translate(UserActor actor, String translationLanguage,
            String... texts) {
        return new TranslationsTranslateQuery(getClient(), actor, translationLanguage, texts);
    }

    /**
     * @param actor vk user actor
     * @param translationLanguage
     * @param texts
     * @return query
     */
    @ApiMethod("translations.translate")
    public TranslationsTranslateQuery translate(UserActor actor, String translationLanguage,
            List<String> texts) {
        return new TranslationsTranslateQuery(getClient(), actor, translationLanguage, texts);
    }

    /**
     * @param actor vk user actor
     * @return only actor query 
     */
    @ApiMethod("translations.translate")
    public TranslationsTranslateQuery translate(UserActor actor) {
        return new TranslationsTranslateQuery(getClient(), actor);
    }

    /**
     * @param actor vk service actor
     * @param translationLanguage
     * @param texts
     * @return query
     */
    @ApiMethod("translations.translate")
    public TranslationsTranslateQuery translate(ServiceActor actor, String translationLanguage,
            String... texts) {
        return new TranslationsTranslateQuery(getClient(), actor, translationLanguage, texts);
    }

    /**
     * @param actor vk service actor
     * @param translationLanguage
     * @param texts
     * @return query
     */
    @ApiMethod("translations.translate")
    public TranslationsTranslateQuery translate(ServiceActor actor, String translationLanguage,
            List<String> texts) {
        return new TranslationsTranslateQuery(getClient(), actor, translationLanguage, texts);
    }

    /**
     * @param actor vk service actor
     * @return only actor query 
     */
    @ApiMethod("translations.translate")
    public TranslationsTranslateQuery translate(ServiceActor actor) {
        return new TranslationsTranslateQuery(getClient(), actor);
    }
}
