// Autogenerated from vk-api-schema. Please don't edit it manually.
package com.vk.api.sdk.objects.support;

import com.google.gson.Gson;
import com.google.gson.JsonPrimitive;
import com.google.gson.annotations.SerializedName;
import com.vk.api.sdk.objects.Validable;
import com.vk.api.sdk.objects.annotations.Required;
import java.util.Objects;

/**
 * UnblockScreenStepperQuestions object
 */
public class UnblockScreenStepperQuestions implements Validable {
    /**
     * Текст, отображаемый при нажатии на нет
     */
    @SerializedName("no_desc")
    private JsonPrimitive noDesc;

    @SerializedName("step")
    private Number step;

    /**
     * Экран, на который происходит переход; обычно содержимое другого экрана - просто заголовок с текстом и кнопкой
     */
    @SerializedName("target_screen")
    @Required
    private String targetScreen;

    /**
     * Текст вопроса
     */
    @SerializedName("title")
    @Required
    private String title;

    /**
     * Текст, отображаемый при нажатии на да
     */
    @SerializedName("yes_desc")
    private JsonPrimitive yesDesc;

    public JsonPrimitive getNoDesc() {
        return noDesc;
    }

    public UnblockScreenStepperQuestions setNoDesc(JsonPrimitive noDesc) {
        this.noDesc = noDesc;
        return this;
    }

    public Number getStep() {
        return step;
    }

    public UnblockScreenStepperQuestions setStep(Number step) {
        this.step = step;
        return this;
    }

    public String getTargetScreen() {
        return targetScreen;
    }

    public UnblockScreenStepperQuestions setTargetScreen(String targetScreen) {
        this.targetScreen = targetScreen;
        return this;
    }

    public String getTitle() {
        return title;
    }

    public UnblockScreenStepperQuestions setTitle(String title) {
        this.title = title;
        return this;
    }

    public JsonPrimitive getYesDesc() {
        return yesDesc;
    }

    public UnblockScreenStepperQuestions setYesDesc(JsonPrimitive yesDesc) {
        this.yesDesc = yesDesc;
        return this;
    }

    @Override
    public int hashCode() {
        return Objects.hash(noDesc, yesDesc, step, targetScreen, title);
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        UnblockScreenStepperQuestions unblockScreenStepperQuestions = (UnblockScreenStepperQuestions) o;
        return Objects.equals(yesDesc, unblockScreenStepperQuestions.yesDesc) &&
                Objects.equals(step, unblockScreenStepperQuestions.step) &&
                Objects.equals(targetScreen, unblockScreenStepperQuestions.targetScreen) &&
                Objects.equals(title, unblockScreenStepperQuestions.title) &&
                Objects.equals(noDesc, unblockScreenStepperQuestions.noDesc);
    }

    @Override
    public String toString() {
        final Gson gson = new Gson();
        return gson.toJson(this);
    }

    public String toPrettyString() {
        final StringBuilder sb = new StringBuilder("UnblockScreenStepperQuestions{");
        sb.append("yesDesc=").append(yesDesc);
        sb.append(", step=").append(step);
        sb.append(", targetScreen='").append(targetScreen).append("'");
        sb.append(", title='").append(title).append("'");
        sb.append(", noDesc=").append(noDesc);
        sb.append('}');
        return sb.toString();
    }
}
