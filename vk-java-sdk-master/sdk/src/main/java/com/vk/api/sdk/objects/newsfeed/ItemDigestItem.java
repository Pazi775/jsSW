// Autogenerated from vk-api-schema. Please don't edit it manually.
package com.vk.api.sdk.objects.newsfeed;

import com.google.gson.Gson;
import com.google.gson.annotations.SerializedName;
import com.vk.api.sdk.objects.Validable;
import com.vk.api.sdk.objects.annotations.Required;
import com.vk.api.sdk.objects.wall.WallpostAttachment;
import java.util.Objects;

/**
 * ItemDigestItem object
 */
public class ItemDigestItem extends ItemBase implements Validable {
    @SerializedName("attachment")
    private WallpostAttachment attachment;

    @SerializedName("attachment_index")
    private Integer attachmentIndex;

    /**
     * Optional red badge for posts in digest block
     */
    @SerializedName("badge_text")
    private String badgeText;

    @SerializedName("post")
    @Required
    private ItemWallpost post;

    @SerializedName("source_name")
    private String sourceName;

    @SerializedName("style")
    private ItemDigestItemStyle style;

    @SerializedName("text")
    private String text;

    public WallpostAttachment getAttachment() {
        return attachment;
    }

    public ItemDigestItem setAttachment(WallpostAttachment attachment) {
        this.attachment = attachment;
        return this;
    }

    public Integer getAttachmentIndex() {
        return attachmentIndex;
    }

    public ItemDigestItem setAttachmentIndex(Integer attachmentIndex) {
        this.attachmentIndex = attachmentIndex;
        return this;
    }

    public String getBadgeText() {
        return badgeText;
    }

    public ItemDigestItem setBadgeText(String badgeText) {
        this.badgeText = badgeText;
        return this;
    }

    public ItemWallpost getPost() {
        return post;
    }

    public ItemDigestItem setPost(ItemWallpost post) {
        this.post = post;
        return this;
    }

    public String getSourceName() {
        return sourceName;
    }

    public ItemDigestItem setSourceName(String sourceName) {
        this.sourceName = sourceName;
        return this;
    }

    public ItemDigestItemStyle getStyle() {
        return style;
    }

    public ItemDigestItem setStyle(ItemDigestItemStyle style) {
        this.style = style;
        return this;
    }

    public String getText() {
        return text;
    }

    public ItemDigestItem setText(String text) {
        this.text = text;
        return this;
    }

    @Override
    public int hashCode() {
        return Objects.hash(attachment, post, attachmentIndex, style, text, sourceName, badgeText);
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        ItemDigestItem itemDigestItem = (ItemDigestItem) o;
        return Objects.equals(attachment, itemDigestItem.attachment) &&
                Objects.equals(attachmentIndex, itemDigestItem.attachmentIndex) &&
                Objects.equals(badgeText, itemDigestItem.badgeText) &&
                Objects.equals(post, itemDigestItem.post) &&
                Objects.equals(style, itemDigestItem.style) &&
                Objects.equals(text, itemDigestItem.text) &&
                Objects.equals(sourceName, itemDigestItem.sourceName);
    }

    @Override
    public String toString() {
        final Gson gson = new Gson();
        return gson.toJson(this);
    }

    public String toPrettyString() {
        final StringBuilder sb = new StringBuilder("ItemDigestItem{");
        sb.append("attachment=").append(attachment);
        sb.append(", attachmentIndex=").append(attachmentIndex);
        sb.append(", badgeText='").append(badgeText).append("'");
        sb.append(", post=").append(post);
        sb.append(", style='").append(style).append("'");
        sb.append(", text='").append(text).append("'");
        sb.append(", sourceName='").append(sourceName).append("'");
        sb.append('}');
        return sb.toString();
    }
}
